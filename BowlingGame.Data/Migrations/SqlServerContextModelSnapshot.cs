// <auto-generated />
using System;
using BowlingGame.Data.SqlServer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BowlingGame.Data.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BowlingGame.Service.Entities.Frame", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GameId")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("BowlingGame.Service.Entities.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentFrameIndex")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BowlingGame.Service.Entities.Roll", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Attempt")
                        .HasColumnType("int");

                    b.Property<string>("FrameId")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FrameId");

                    b.ToTable("Rolls");
                });

            modelBuilder.Entity("BowlingGame.Service.Entities.Frame", b =>
                {
                    b.HasOne("BowlingGame.Service.Entities.Game", "Game")
                        .WithMany("Frames")
                        .HasForeignKey("GameId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("BowlingGame.Service.Entities.Roll", b =>
                {
                    b.HasOne("BowlingGame.Service.Entities.Frame", "Frame")
                        .WithMany("Rolls")
                        .HasForeignKey("FrameId");

                    b.Navigation("Frame");
                });

            modelBuilder.Entity("BowlingGame.Service.Entities.Frame", b =>
                {
                    b.Navigation("Rolls");
                });

            modelBuilder.Entity("BowlingGame.Service.Entities.Game", b =>
                {
                    b.Navigation("Frames");
                });
#pragma warning restore 612, 618
        }
    }
}
